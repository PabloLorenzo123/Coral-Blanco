"""
Django settings for booking_project project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6!#c@g3b=wfzs9a2cqxpq$4#!pfvjls1ea*953slj+t3b61&de'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # Local
    'accounts.apps.AccountsConfig',
    'booking.apps.BookingConfig',
    'reports.apps.ReportsConfig',
    # Third party apps.
    "crispy_forms",
    "crispy_bootstrap5",
    'allauth',
    'allauth.account', # using another table for emails.
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'booking_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'booking_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

"""Authentication and Allauth"""
AUTH_USER_MODEL = "accounts.CustomUser"
# Django allauth config.
SITE_ID = 1
AUTHENTICATION_BACKENDS = (
"django.contrib.auth.backends.ModelBackend",
"allauth.account.auth_backends.AuthenticationBackend", # new
)
ACCOUNT_FORMS = {
    'signup': 'accounts.forms.CustomSignupForm',
}
ACCOUNT_USERNAME_REQUIRED = False # While this approach may seem a little hackish in fact it works just fine. Fully removing the username from the custom user model requires the use of AbstractBaseUser116, which is an additional, optional step some developers take. 
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_SESSION_REMEMBER = True # To remove the checkbox of templates/account/login.html
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False
ACCOUNT_CHANGE_EMAIL = False

ACCOUNT_SIGNUP_REDIRECT_URL = 'account_login'
ACCOUNT_LOGIN_REDIRECT_URL = 'home'
ACCOUNT_LOGOUT_REDIRECT_URL = 'home'
LOGIN_REDIRECT_URL = 'home' # This fixes signup redirect.
LOGOUT_REDIRECT_URL = 'home'
LOGIN_URL = 'account_login'



"""To test email in the console NOT BEING USED"""
#DEFAULT_FROM_EMAIL = "admin@django.com"
#EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend" 

"""SMTP SERVER (EMAIL)"""
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'apikey'
EMAIL_HOST_PASSWORD = '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'
DEFAULT_FROM_EMAIL = "pabloernesto8022@gmail.com"
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False


"""Images/Files upload"""
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
"""Crispy forms and bootstrap"""
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

"""Stripe"""
STRIPE_TEST_PUBLISHABLE_KEY = 'pk_test_51OLCZILKb9dB8gecVOqM1KvapMIUVkeZTTI1HIlCAR9oOKkQxaa1a63DK49s9b0dsPubZ4WEsEPPpNL8ew2YU76L00B1Jtwi3D'
STRIPE_TEST_SECRET_KEY = 'sk_test_51OLCZILKb9dB8gecrZV0yMMPdFF1LyXkSIm7955moskcC1eJnQKC6LXuvlySnFxNB10em49Xm512ocUc9WFv5qC000BMEFjGOa'